# Generated by Django 5.2.4 on 2025-08-04 09:58

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_members', models.IntegerField(default=0)),
                ('total_events', models.IntegerField(default=0)),
                ('mentorship_pairs', models.IntegerField(default=0)),
                ('active_projects', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Community Statistics',
            },
        ),
        migrations.CreateModel(
            name='MembershipApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer-not-to-say', 'Prefer not to say')], max_length=20)),
                ('id_number', models.CharField(max_length=50, unique=True)),
                ('current_address', models.TextField()),
                ('region', models.CharField(choices=[('dar-es-salaam', 'Dar es Salaam'), ('arusha', 'Arusha'), ('dodoma', 'Dodoma'), ('mbeya', 'Mbeya'), ('mwanza', 'Mwanza'), ('other', 'Other')], max_length=50)),
                ('district', models.CharField(max_length=100)),
                ('education', models.CharField(choices=[('primary', 'Primary School'), ('secondary', 'Secondary School'), ('diploma', 'Diploma'), ('bachelor', "Bachelor's Degree"), ('master', "Master's Degree"), ('phd', 'PhD'), ('other', 'Other')], max_length=50)),
                ('occupation', models.CharField(max_length=200)),
                ('work_experience', models.JSONField(blank=True, default=list)),
                ('skills', models.JSONField(blank=True, default=list)),
                ('languages', models.JSONField(blank=True, default=list)),
                ('why_join', models.TextField()),
                ('contribution', models.TextField()),
                ('expectations', models.TextField()),
                ('referral', models.CharField(blank=True, choices=[('friend', 'Friend/Family'), ('social-media', 'Social Media'), ('event', 'Community Event'), ('search', 'Online Search'), ('other', 'Other')], max_length=50)),
                ('agree_terms', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'membership_applications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(choices=[('founder', 'Founder & Director'), ('coordinator', 'Programs Coordinator'), ('manager', 'Community Manager'), ('mentor', 'Senior Mentor'), ('advisor', 'Advisor'), ('other', 'Other')], max_length=50)),
                ('bio', models.TextField()),
                ('quote', models.TextField(help_text='Personal quote or message')),
                ('image', models.ImageField(blank=True, null=True, upload_to='team/')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('linkedin', models.URLField(blank=True)),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('bio', models.TextField(blank=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('date_joined_community', models.DateTimeField(auto_now_add=True)),
                ('is_community_member', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date', models.DateField(blank=True, null=True)),
                ('event_type', models.CharField(choices=[('workshop', 'Workshop'), ('meetup', 'Meetup'), ('seminar', 'Seminar'), ('conference', 'Conference'), ('networking', 'Networking'), ('training', 'Training'), ('other', 'Other')], default='meetup', max_length=20)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(max_length=300)),
                ('is_online', models.BooleanField(default=False)),
                ('max_participants', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('requirements', models.TextField(blank=True, help_text='Any requirements or materials needed')),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date_time'],
            },
        ),
        migrations.CreateModel(
            name='CommunityReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='pages.customuser')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user',)},
            },
        ),
        migrations.CreateModel(
            name='EventBooking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('attended', 'Attended')], default='confirmed', max_length=20)),
                ('booked_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes or requirements')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='pages.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='pages.customuser')),
            ],
            options={
                'ordering': ['-booked_at'],
                'unique_together': {('event', 'user')},
            },
        ),
    ]
